{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport * as Google from 'expo-google-app-auth';\nimport * as WebBrowser from 'expo-web-browser';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Heading, Button, VStack, Flex, Link, Box } from 'native-base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar authentication = function authentication() {\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      accessToken = _React$useState2[0],\n      setAccessToken = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userInfo = _React$useState4[0],\n      setUserInfo = _React$useState4[1];\n\n  function signInWithGoogleAsync() {\n    var result;\n    return _regeneratorRuntime.async(function signInWithGoogleAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Google.logInAsync({\n              expoClientId: \"32874219277-hu0dk0feqc5ovl3gjg6b4i2lieopbi6a.apps.googleusercontent.com\",\n              androidClientId: \"32874219277-bhghnuaipathh4hs9s3kbmgvnmi6l9t7.apps.googleusercontent.com\",\n              scopes: [\"profile\", \"email\"]\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (result.type === \"success\") {\n              setAccessToken(result.accessToken);\n            } else {\n              console.log(\"Permission denied\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  function getUserData() {\n    var userInfoResponse;\n    return _regeneratorRuntime.async(function getUserData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://www.googleapis.com/userinfo/v2/me\", {\n              headers: {\n                'Authorization': \"Bearer \" + accessToken\n              }\n            }));\n\n          case 2:\n            userInfoResponse = _context2.sent;\n            userInfoResponse.json().then(function (data) {\n              setUserInfo(data);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function showUserInfo() {\n    if (userInfo) {\n      return _jsxs(View, {\n        style: styles.userInfo,\n        children: [_jsx(Image, {\n          source: {\n            uri: userInfo.picture\n          },\n          style: styles.profilePic\n        }), _jsxs(Text, {\n          children: [\"Welcome \", userInfo.name]\n        }), _jsx(Text, {\n          children: userInfo.email\n        })]\n      });\n    }\n  }\n\n  return _jsx(VStack, {\n    children: _jsx(Flex, {\n      alignItems: \"flex-start\",\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [showUserInfo(), _jsx(Heading, {\n          children: \"Start Table Hunting!\"\n        }), _jsx(Button, {\n          borderRadius: 8,\n          width: \"50%\",\n          mt: \"5\",\n          children: \"Continue with email\"\n        }), _jsx(Button, {\n          borderRadius: 8,\n          width: \"50%\",\n          mt: \"5\",\n          onPress: accessToken ? getUserData : signInWithGoogleAsync,\n          children: accessToken ? \"Get user data\" : \"Continue with google\"\n        }), _jsxs(Text, {\n          children: [\"Not a member?\", _jsx(Link, {\n            children: \"Sign up\"\n          })]\n        }), _jsx(StatusBar, {\n          style: \"auto\"\n        }), _jsx(Text, {\n          children: \"Are you a restaurant owner?\"\n        }), _jsx(Button, {\n          borderRadius: 8,\n          width: \"50%\",\n          mt: \"5\",\n          children: \"Continue with email\"\n        }), _jsx(Button, {\n          borderRadius: 8,\n          width: \"50%\",\n          mt: \"5\",\n          onPress: accessToken ? getUserData : signInWithGoogleAsync,\n          children: accessToken ? \"Get user data\" : \"Continue with google\"\n        })]\n      })\n    })\n  });\n};\n\nexport default authentication;\nvar styles = StyleSheet.create({\n  container: {\n    margin: 100,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    width: '100%'\n  },\n  userInfo: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  profilePic: {\n    width: 50,\n    height: 50\n  },\n  button: {\n    borderRadius: 50,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["D:/Study/Term 4/Capstone/capstone/src/components/layout/authentication.js"],"names":["React","Google","WebBrowser","StatusBar","Heading","Button","VStack","Flex","Link","Box","authentication","useState","accessToken","setAccessToken","userInfo","setUserInfo","signInWithGoogleAsync","logInAsync","expoClientId","androidClientId","scopes","result","type","console","log","getUserData","fetch","headers","userInfoResponse","json","then","data","showUserInfo","styles","uri","picture","profilePic","name","email","container","StyleSheet","create","margin","flex","backgroundColor","alignItems","width","justifyContent","height","button","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as Google from 'expo-google-app-auth'\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, Image} from 'react-native';\r\nimport { Heading, Button, VStack, Flex, Link, Box} from 'native-base'\r\n\r\n\r\nconst authentication = () => {\r\n    const [accessToken, setAccessToken] = React.useState();\r\nconst [userInfo, setUserInfo] = React.useState();\r\n\r\nasync function signInWithGoogleAsync() {\r\n  try {\r\n    const result = await Google.logInAsync({\r\n      expoClientId: \"32874219277-hu0dk0feqc5ovl3gjg6b4i2lieopbi6a.apps.googleusercontent.com\",\r\n  androidClientId: \"32874219277-bhghnuaipathh4hs9s3kbmgvnmi6l9t7.apps.googleusercontent.com\",\r\n      scopes: [\"profile\", \"email\"]\r\n    });\r\n\r\n    if (result.type === \"success\") {\r\n      setAccessToken(result.accessToken);\r\n    } else {\r\n      console.log(\"Permission denied\");\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nasync function getUserData() {\r\n  let userInfoResponse = await fetch(\"https://www.googleapis.com/userinfo/v2/me\", {\r\n    headers: { 'Authorization': `Bearer ${accessToken}` }\r\n  })\r\n\r\n  userInfoResponse.json().then(data => {\r\n    setUserInfo(data);\r\n  })\r\n}\r\n\r\nfunction showUserInfo() {\r\n  if (userInfo) {\r\n    return (\r\n      <View style={styles.userInfo}>\r\n\r\n        <Image source={{ uri: userInfo.picture }} style={styles.profilePic} />\r\n        <Text>Welcome {userInfo.name}</Text>\r\n        <Text>{userInfo.email}</Text>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n  return (\r\n    \r\n    <VStack >\r\n        <Flex alignItems=\"flex-start\">\r\n            <View style={styles.container}>\r\n              {showUserInfo()}\r\n              <Heading>Start Table Hunting!</Heading>\r\n              <Button borderRadius={8} width='50%' mt='5' >Continue with email</Button>\r\n              <Button borderRadius={8} width='50%' mt='5' onPress={accessToken ? getUserData : signInWithGoogleAsync}>\r\n              {accessToken ? \"Get user data\" : \"Continue with google\"}\r\n              </Button>\r\n              <Text>Not a member?<Link>Sign up</Link></Text>\r\n              <StatusBar style=\"auto\" />\r\n             \r\n            <Text>Are you a restaurant owner?</Text>\r\n            <Button borderRadius={8} width='50%' mt='5'  >Continue with email</Button>\r\n              <Button borderRadius={8} width='50%' mt='5'  onPress={accessToken ? getUserData : signInWithGoogleAsync}>\r\n              {accessToken ? \"Get user data\" : \"Continue with google\"}\r\n              </Button>\r\n       \r\n            </View>\r\n        </Flex>\r\n       \r\n        \r\n    </VStack>\r\n    \r\n  )\r\n}\r\n\r\nexport default authentication\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        margin: 100,\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'flex-start',\r\n      width: '100%',\r\n      \r\n    },\r\n    userInfo: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    profilePic: {\r\n      width: 50,\r\n      height: 50\r\n    },\r\n    button: {\r\n        borderRadius: 50,\r\n        width: '100%',\r\n    }\r\n  });\r\n\r\n"]},"metadata":{},"sourceType":"module"}